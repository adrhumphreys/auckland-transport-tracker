{"id":"../node_modules/gl-quat/rotateX.js","dependencies":[{"name":"/Users/adrian/Code/react/follower/package.json","includedInParent":true,"mtime":1543051274389},{"name":"/Users/adrian/Code/react/follower/.browserslistrc","includedInParent":true,"mtime":1543035296869},{"name":"/Users/adrian/Code/react/follower/node_modules/gl-quat/package.json","includedInParent":true,"mtime":1431616869000}],"generated":{"js":"module.exports = rotateX\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateX (out, a, rad) {\n  rad *= 0.5\n\n  var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n    bx = Math.sin(rad), bw = Math.cos(rad)\n\n  out[0] = ax * bw + aw * bx\n  out[1] = ay * bw + az * bx\n  out[2] = az * bw - ay * bx\n  out[3] = aw * bw - ax * bx\n  return out\n}\n","map":{"mappings":[{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/gl-quat/rotateX.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}}],"sources":{"../node_modules/gl-quat/rotateX.js":"module.exports = rotateX\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateX (out, a, rad) {\n  rad *= 0.5\n\n  var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n    bx = Math.sin(rad), bw = Math.cos(rad)\n\n  out[0] = ax * bw + aw * bx\n  out[1] = ay * bw + az * bx\n  out[2] = az * bw - ay * bx\n  out[3] = aw * bw - ax * bx\n  return out\n}\n"},"lineCount":23}},"hash":"3f5edb82fe0f22243d8eb783738fce49","cacheData":{"env":{}}}